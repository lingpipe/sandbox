<?xml version="1.0" encoding="ASCII"?>
<project>

  <property name="version"
            value="4.0"/>

  <property name="jar"
            value="build/lp-book-tok-${version}.jar"/>

  <path id="classpath">
    <pathelement location="${jar}"/>
    <pathelement location="../../lib/lingpipe-4.1.0.jar"/>
    <pathelement location="../../lib/icu4j-4_4_1.jar"/>
    <pathelement location="../../lib/lucene-core-3.0.2.jar"/>
    <pathelement location="../../lib/lucene-analyzers-3.0.2.jar"/>
  </path>

  <target name="clean">
    <delete dir="build"/>
  </target>

  <target name="jar">
    <mkdir dir="build/classes"/>
    <javac debug="yes"
           debuglevel="source,lines,vars"
           destdir="build/classes"
           includeantruntime="false">
      <compilerarg value="-Xlint:all"/>
      <classpath refid="classpath"/>
      <src path="src/"/>
    </javac>
    <jar destfile="${jar}">
      <fileset dir="build/classes"
               includes="**/*.class"/>
    </jar>
  </target>

  <property name="text"
            value="The note says, 'Mr. Sutton-Smith owes $15.20.'"/>
  <target name="display-tokens"
          depends="jar">
    <java classname="com.lingpipe.book.tok.DisplayTokens"
          classpathref="classpath"
          fork="true">
      <arg value="${text}"/>
    </java>
  </target>

  <property name="regex" value="\S+"/>
  <property name="flags" value="0"/>
  <target name="regex-tokens"
          depends="jar">
    <java classname="com.lingpipe.book.tok.RegexTokens"
          classpathref="classpath"
          fork="true">
      <arg value="${regex}"/>
      <arg value="${flags}"/>
      <arg value="${text}"/>
    </java>
  </target>

  <property name="minNGram" value="2"/>
  <property name="maxNGram" value="3"/>
  <target name="ngram-tokens"
          depends="jar">
    <java classname="com.lingpipe.book.tok.NGramTokens"
          classpathref="classpath"
          fork="true">
      <arg value="${minNGram}"/>
      <arg value="${maxNGram}"/>
      <arg value="${text}"/>
    </java>
  </target>

  <target name="reverse-tokens"
          depends="jar">
    <java classname="com.lingpipe.book.tok.ReverseTokenTokenizerFactory"
          classpathref="classpath"
          fork="true">
      <arg value="${text}"/>
    </java>
  </target>

  <property name="prefixLen" value="5"/>
  <target name="prefix-stem-tokens"
          depends="jar">
    <java classname="com.lingpipe.book.tok.PrefixStemTokenizerFactory"
          classpathref="classpath"
          fork="true">
      <arg value="${prefixLen}"/>
      <arg value="${text}"/>
    </java>
  </target>

  <target name="porter-stemmer-tokens"
          depends="jar">
    <java classname="com.lingpipe.book.tok.PorterStemmerTokens"
          classpathref="classpath"
          fork="true">
      <arg value="${text}"/>
    </java>
  </target>

  <target name="soundex-tokens"
          depends="jar">
    <java classname="com.lingpipe.book.tok.SoundexTokens"
          classpathref="classpath"
          fork="true">
      <arg value="${text}"/>
    </java>
  </target>


  <property name="translit.scheme" 
            value="NFD; [:Nonspacing Mark:] Remove; NFC"/>
  <target name="unicode-norm-tokens"
          depends="jar">
    <java classname="com.lingpipe.book.tok.UnicodeNormTokenizerFactory"
          classpathref="classpath"
          fork="true">
      <arg value="${translit.scheme}"/>
      <arg value="${text}"/>
    </java>
  </target>

  <target name="treebank-tokens"
          depends="jar">
    <java classname="com.lingpipe.book.tok.PennTreebankTokenizerFactory"
          classpathref="classpath"
          fork="true">
      <arg value="${text}"/>
    </java>
  </target>



  <target name="lucene-lp-tokens"
          depends="jar">
    <java classname="com.lingpipe.book.tok.AnalyzerTokenizerFactory"
          classpathref="classpath"
          fork="true">
      <arg value="${text}"/>
    </java>
  </target>

  <target name="lp-lucene-tokens"
          depends="jar">
    <java classname="com.lingpipe.book.tok.TokenizerFactoryAnalyzer"
          classpathref="classpath"
          fork="true">
      <arg value="${text}"/>
    </java>
  </target>

  <property name="file" value="config/arabic-sample.utf8.txt"/>
  <target name="arabic-tokens"
          depends="jar">
    <java classname="com.lingpipe.book.tok.ArabicTokenizerFactory"
          classpathref="classpath"
          fork="true">
      <arg value="${file}"/>
    </java>
  </target>


  <target name="tokenization"
          depends="jar">
    <java classname="com.lingpipe.book.tok.DisplayTokenization"
          classpathref="classpath"
          fork="true">
      <arg value="${text}"/>
    </java>
  </target>
 
  <target name="run"
          depends="display-tokens,
                   regex-tokens,
                   ngram-tokens,
                   reverse-tokens,
                   prefix-stem-tokens,
                   porter-stemmer-tokens,
                   soundex-tokens,
                   unicode-norm-tokens,
                   lucene-lp-tokens,
                   lp-lucene-tokens,
                   arabic-tokens,
                   tokenization"/>

</project>